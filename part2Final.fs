let mutable Rand = System.Random ()

let rec printList l =
  match l with
  | x :: xs -> let _ = printf "%d, " x in printList xs
  | [] -> let _ = printf "\n" in ()

let rec printArray (arr: int array) len = 
  match len with
  | -1 -> let _ = printf "\n" in ()
  | _ -> let _ = printf "%d, " arr.[len] in printArray arr (len - 1)
let duplicates l = List.length l - List.length (List.distinct l)
let getSqrInds sqrInd =
    let upperLeft = sqrInd / 3 * 27 + sqrInd % 3 * 3 in
    List.concat [
      for i in upperLeft .. upperLeft + 2 -> 
        [for k in 0 .. 2 -> i + k * 9]
    ]

(* take a pair of linear indices and check if corresponding elements are in
   the same sub squares *)
let isSameSquare i j = 
  let row = i / 9 in
  let col = i % 9 in
  let sqrInd = row / 3 * 3 + col / 3 in
  List.contains j (getSqrInds sqrInd)

(* return fitness of a row, column, or small square *)
let rec listFit l = 
  let all = [1; 2; 3; 4; 5; 6; 7; 8; 9] in
  let c = Set.difference (Set.ofList all) (Set.ofList l) in
  Set.count c

type SudokuBoard = {
    clues: int list
    cells: int array
    mutable age: int
}
with
  (* methods and helpers to calculate the fitness *)
  member private b.getRow rowNum =
    let finish = rowNum * 9 + 9 in
    let rec getRowHelper cur =
      match finish - cur with
      | 0 -> []
      | _ -> b.cells.[cur] :: getRowHelper (cur + 1)
    in
    getRowHelper (rowNum * 9)
  member private b.getCol colNum =
    let finish = colNum + 9 * 8 in
    let rec getColHelper cur =
      if cur = finish then
        [b.cells.[cur]]
      else
        b.cells.[cur] :: getColHelper (cur + 9)
    in
    getColHelper colNum
  member b.getSqr squareNum =
    let start = (squareNum / 3) * 27 + (squareNum % 3) * 3 in
    let rec getSquareHelp r c = 
      match (r, c) with
      | (3, _) -> []
      | (_, 3) ->  getSquareHelp (r + 1) 0
      | _ -> b.cells.[start + r * 9 + c] :: getSquareHelp r (c + 1)
    in
    getSquareHelp 0 0 
  member b.fit =
    let rec fitHelp count =
      match count with
      | -1 -> 0
      | _ -> 
        let row = b.getRow count in
        let col = b.getCol count in
        let sqr = b.getSqr count in
        listFit row + listFit col + listFit sqr + fitHelp (count - 1)
    in
    b.age + fitHelp 8
  (* mutation modifies the original board, does not return a new one *)
  member b.mutate =
    let rec mutateHelp count =
      //let _ = printfn "%d mutations remaining" count
      match count with
      | 0 -> ()
      | _ ->
        let p1 = Rand.Next (0, 81) in
        let p2 = Rand.Next (0, 81) in
        let b1 = List.contains p1 b.clues in
        let b2 = List.contains p2 b.clues in
        let b3 = isSameSquare p1 p2 in
        if b1 || b2 || not b3 then
          //let _ = printfn "p1: %d, p2: %d" p1 p2 in
          //let _ = printfn "is p1 clue: %b, is p2 clues: %b" b1 b2 in
          //let _ = printfn "in same sub square? %b" b3 in
          mutateHelp (count - 1)
        else
          let v1 = b.cells.[p1] in
          let v2 = b.cells.[p2] in
          let _ = b.cells.[p1] <- v2 in
          let _ = b.cells.[p2] <- v1 in
          //let _ = printf "mutating cells at index %d and %d, with values %d and %d\n" p1 p2 v1 v2 in 
          (* enforce rows and columns involved after swap has < 3 duplicates *)
          let d1 = duplicates (b.getRow (p1 / 9)) in
          let d2 = duplicates (b.getCol (p1 % 9)) in
          let d3 = duplicates (b.getRow (p2 / 9)) in
          let d4 = duplicates (b.getCol (p2 % 9)) in
          if d1 > 2 || d2 > 2 || d3 > 2 || d4 > 2 then
            //let _ = printfn "aborting due to slack"
            let _ = b.cells.[p1] <- v1 in
            let _ = b.cells.[p2] <- v2 in
            mutateHelp (count - 1)
          else
            // let _ = printf "successful mutate" in
            mutateHelp (count - 1)
    in mutateHelp 5
  member b.print = 
    let rec printHelp n =
      match n with
      | 81 -> ()
      | _ -> 
        if n % 9 = 0 && n <> 0 then
          let _ = printf "\n" in
          let _ = printf "%d " b.cells.[n] in
          printHelp (n + 1)
        else
          let _ = printf "%d " b.cells.[n] in
          printHelp (n + 1)
    in
    let _ = printHelp 0 in
    printfn ""

(* select individuals for mating *)
let select p =
  //let p = Array.sortBy (fun (b: SudokuBoard) -> b.fit) p
  let start = Array.length p - 1 in
  let rec selectHelp n =
    match n with
    | 0 -> []
    | _ -> 
      let i1 = Rand.Next (0, n) in
      let i2 = Rand.Next (0, n) in
      (p.[i1], p.[i2]) :: selectHelp (n - 1)
  in
  selectHelp start

(* crossOver done uniformly *)
(* helper method that crosses over a single pair of parents *)
let  crossOverAndMutate p1 p2 =
  let childCells = Array.create 81 0 in
  let rec copyCell inds parent =
    match inds with
    | x :: xs -> let _ = childCells.[x] <- parent.cells.[x] in copyCell xs parent
    | [] -> ()
  in
  let rec help sqrInd =
    match sqrInd with
    | -1 -> ()
    | _ -> 
      let inds = getSqrInds sqrInd in
      let n = Rand.Next (0, 2) in
      //let _ = printList inds in 
      match n with
      | 0 -> let _ = copyCell inds p1 in help (sqrInd - 1) 
      | _ -> let _ = copyCell inds p2 in help (sqrInd - 1)
  in
  let _ = help 8 in
  let b = {clues = p1.clues; cells = childCells; age = 0} in
  let _ = b.mutate in
  //let _ = b.print in
  //let _ = printfn "" in
  b

(* crossOver main method *)
let crossOver p = 
  let rec help p =
    match p with
    | (p1, p2) :: xs -> crossOverAndMutate p1 p2 :: help xs
    | [] -> []
  in
  Array.ofList (help p)

(* extract list of indicies from input clues *)
let rec getClueInds clues =
  match clues with
  | (i, _) :: xs -> i :: getClueInds xs
  | [] -> [] 

(* get numbers that are already in a subsquare 
   list containing values of the small square -> list of values not there yet*)
let rec getNotContained l =
  let allNums = [1; 2; 3; 4; 5; 6; 7; 8; 9] in
  List.filter (fun a -> not (Set.contains a l)) allNums

(* generate a single random full board, ensure on duplicaetes in sub squares *)
let genBoard clues =
  let b = { clues = getClueInds clues; cells = Array.create 81 0; age = 0 } in
  let rec writeClues clues = (* write all clues *)
    match clues with
    | (ind, value) :: xs -> let _ = b.cells.[ind] <- value in writeClues xs
    | [] -> ()
  in
  let _ = writeClues clues in
  let rec fillSqrHelp inds (pool: int list) = (* fill one small square *) // TODO use arrays for pool, little bit faster
    match inds with
    | x :: xs ->
      if b.cells.[x] = 0 then
        let randVal = Rand.Next (0, List.length pool) in
        let value = pool.[randVal] in
        let rest = List.filter (fun a -> a <> value) pool in
          let _ = b.cells.[x] <- value in
          fillSqrHelp xs rest
      else
        fillSqrHelp xs pool
    | [] -> ()
  in
  let rec fillSquare sqrInd = (* fill all small squares *)
    match sqrInd with
    | -1 -> ()
    | _ ->
      let contained = Set.ofList (b.getSqr sqrInd) in
      let _ = fillSqrHelp (getSqrInds sqrInd) (getNotContained contained) in
      fillSquare (sqrInd - 1)
  in
  let _ = fillSquare 8 in
  b

(* generate n random boards *)
let genBoards n clues =
  let rec help n =
    match n with
    | 0 -> []
    | _ -> (genBoard clues) :: help (n - 1)
  in
  Array.ofList (help n)

let restart = 2000

let checkSolution (pop: SudokuBoard []) =
  let rec help n =
    match n with
    | 0 -> if pop.[n].fit = 0 then Some pop.[n] else None
    | _ -> if pop.[n].fit = 0 then Some pop.[n] else help (n - 1)
  in
  help ((Array.length pop) - 1)

let mutable totalRestart = 0

(* run genetic algortihm
   pSize: initial population size
   reStart: #rounds to trigger start over once reached *)
let rec runGenetic pSize clues =
  let rec help pop genNum =
    let _ = printfn "%dth iteration" genNum in
    let _ = Array.sortInPlaceBy (fun (b: SudokuBoard) -> b.fit) pop in
    if genNum = restart then (* catalytic restart *)
      let _ = totalRestart <- totalRestart + 1 in
      runGenetic pSize clues
    else
      match checkSolution pop with (* check if a solution is found *)
      | Some x -> Some x
      | _ ->
        let fittest = pop.[0] in
        let _ = fittest.age <- fittest.age + 1 in
        let newPop = Array.concat [[|fittest|]; crossOver (select pop)] in
        help newPop (genNum + 1)
  in 
  help (genBoards pSize clues) 0

let ws301 = [
  (1, 3);
  (2, 9);
  (3, 5);
  (12, 8);
  (16, 7);
  (22, 1);
  (24, 9);
  (26, 4);
  (27, 1);
  (30, 4);
  (35, 3);
  (47, 7);
  (51, 8);
  (52, 6);
  (56, 6);
  (57, 7);
  (59, 8);
  (60, 2);
  (64, 1);
  (67, 9);
  (71, 5);
  (77, 1);
  (80, 8);
]

let easy1 = [
  (0, 2);
  (3, 8);
  (4, 1);
  (5, 6);
  (6, 4);
  (10, 5);
  (14, 3);
  (18, 7);
  (20, 6);
  (21, 5);
  (22, 9);
  (24, 3);
  (29, 9);
  (30, 1);
  (31, 7);
  (33, 2);
  (37, 3);
  (38, 5);
  (42, 1);
  (43, 4);
  (47, 7);
  (49, 4);
  (50, 5);
  (51, 9);
  (56, 8);
  (58, 3);
  (59, 7);
  (60, 6);
  (62, 4);
  (66, 4);
  (70, 8);
  (74, 4);
  (75, 6);
  (76, 8);
  (77, 2);
  (80, 1);
]

let b1 = genBoard easy1
let b2 = genBoard easy1
let c = crossOverAndMutate b1 b2

let solvedRaw = [
  3; 8; 6; 7; 4; 1; 2; 5; 9;
  2; 5; 4; 3; 9; 8; 7; 1; 6;
  7; 1; 9; 6; 5; 2; 3; 8; 4;
  6; 2; 8; 5; 7; 3; 9; 4; 1;
  5; 3; 7; 4; 1; 9; 6; 2; 8;
  4; 9; 1; 8; 2; 6; 5; 7; 3;
  1; 4; 5; 9; 6; 7; 8; 3; 2;
  9; 7; 3; 2; 8; 4; 1; 6; 5;
  8; 6; 2; 1; 3; 5; 4; 9; 7;
]

let b3 = {clues = []; cells = Array.ofList solvedRaw; age = 0}
checkSolution [|b3|]

let board0 = [(0,9);(1,6);(2,0);(3,0);(4,8);(5,0);(6,1);(7,0);(8,0);(9,0);(10,0);(11,1);(12,6);(13,3);(14,0);(15,0);(16,0);(17,8);(18,0);(19,3);(20,0);(21,0);(22,0);(23,9);(24,0);(25,2);(26,7);(27,0);(28,0);(29,8);(30,0);(31,5);(32,0);(33,2);(34,7);(35,0);(36,4);(37,2);(38,5);(39,0);(40,0);(41,0);(42,9);(43,0);(44,0);(45,0);(46,0);(47,0);(48,3);(49,0);(50,0);(51,5);(52,4);(53,0);(54,0);(55,0);(56,0);(57,0);(58,0);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,0);(66,0);(67,4);(68,0);(69,0);(70,1);(71,0);(72,1);(73,8);(74,2);(75,0);(76,0);(77,0);(78,3);(79,6);(80,4)]

let board1 = [(0,0);(1,0);(2,0);(3,3);(4,9);(5,4);(6,6);(7,0);(8,0);(9,0);(10,0);(11,0);(12,0);(13,6);(14,1);(15,5);(16,8);(17,0);(18,1);(19,9);(20,6);(21,0);(22,5);(23,0);(24,0);(25,0);(26,0);(27,2);(28,6);(29,0);(30,0);(31,0);(32,7);(33,9);(34,0);(35,0);(36,9);(37,4);(38,0);(39,1);(40,3);(41,0);(42,8);(43,0);(44,0);(45,3);(46,7);(47,0);(48,0);(49,0);(50,0);(51,0);(52,0);(53,1);(54,0);(55,0);(56,0);(57,4);(58,7);(59,0);(60,0);(61,0);(62,6);(63,0);(64,0);(65,0);(66,0);(67,0);(68,0);(69,7);(70,0);(71,0);(72,7);(73,0);(74,2);(75,0);(76,8);(77,0);(78,0);(79,0);(80,0)]

let board2 = [(0,0);(1,5);(2,4);(3,7);(4,1);(5,6);(6,0);(7,0);(8,0);(9,0);(10,0);(11,0);(12,0);(13,0);(14,0);(15,0);(16,0);(17,0);(18,0);(19,6);(20,0);(21,9);(22,4);(23,8);(24,7);(25,0);(26,2);(27,6);(28,0);(29,9);(30,8);(31,0);(32,2);(33,0);(34,4);(35,0);(36,8);(37,0);(38,0);(39,0);(40,0);(41,0);(42,2);(43,9);(44,0);(45,0);(46,7);(47,0);(48,0);(49,9);(50,0);(51,6);(52,0);(53,8);(54,0);(55,8);(56,6);(57,0);(58,0);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,0);(66,0);(67,0);(68,4);(69,1);(70,0);(71,0);(72,0);(73,1);(74,0);(75,6);(76,2);(77,0);(78,0);(79,0);(80,5)]

let board3 = [(0,0);(1,2);(2,5);(3,0);(4,0);(5,6);(6,0);(7,0);(8,0);(9,3);(10,0);(11,0);(12,7);(13,2);(14,5);(15,0);(16,0);(17,0);(18,0);(19,7);(20,8);(21,0);(22,0);(23,0);(24,0);(25,5);(26,6);(27,2);(28,0);(29,4);(30,9);(31,0);(32,0);(33,0);(34,0);(35,0);(36,0);(37,0);(38,7);(39,0);(40,0);(41,0);(42,9);(43,0);(44,3);(45,0);(46,0);(47,0);(48,6);(49,0);(50,0);(51,5);(52,0);(53,0);(54,0);(55,5);(56,0);(57,4);(58,0);(59,0);(60,3);(61,2);(62,0);(63,6);(64,1);(65,2);(66,0);(67,7);(68,8);(69,0);(70,0);(71,0);(72,0);(73,0);(74,0);(75,0);(76,9);(77,0);(78,0);(79,1);(80,8)]

let board4 = [(0,0);(1,2);(2,5);(3,0);(4,0);(5,6);(6,0);(7,0);(8,0);(9,3);(10,0);(11,0);(12,7);(13,2);(14,5);(15,0);(16,0);(17,0);(18,0);(19,7);(20,8);(21,0);(22,0);(23,0);(24,0);(25,5);(26,6);(27,2);(28,0);(29,4);(30,9);(31,0);(32,0);(33,0);(34,0);(35,0);(36,0);(37,0);(38,7);(39,0);(40,0);(41,0);(42,9);(43,0);(44,3);(45,0);(46,0);(47,0);(48,6);(49,0);(50,0);(51,5);(52,0);(53,0);(54,0);(55,5);(56,0);(57,4);(58,0);(59,0);(60,3);(61,2);(62,0);(63,6);(64,1);(65,2);(66,0);(67,7);(68,8);(69,0);(70,0);(71,0);(72,0);(73,0);(74,0);(75,0);(76,9);(77,0);(78,0);(79,1);(80,8)]

let board5 = [(0,0);(1,0);(2,5);(3,0);(4,0);(5,0);(6,0);(7,0);(8,9);(9,0);(10,7);(11,0);(12,0);(13,3);(14,8);(15,1);(16,0);(17,5);(18,6);(19,0);(20,4);(21,2);(22,0);(23,0);(24,0);(25,0);(26,7);(27,9);(28,0);(29,3);(30,0);(31,0);(32,0);(33,0);(34,0);(35,0);(36,7);(37,0);(38,0);(39,9);(40,0);(41,6);(42,2);(43,0);(44,0);(45,0);(46,0);(47,0);(48,0);(49,7);(50,3);(51,0);(52,9);(53,0);(54,0);(55,2);(56,0);(57,0);(58,8);(59,0);(60,0);(61,0);(62,6);(63,0);(64,0);(65,1);(66,0);(67,0);(68,0);(69,0);(70,7);(71,0);(72,8);(73,9);(74,6);(75,1);(76,5);(77,0);(78,0);(79,3);(80,0)]

let board6 = [(0,0);(1,0);(2,7);(3,0);(4,9);(5,0);(6,0);(7,0);(8,2);(9,0);(10,9);(11,6);(12,2);(13,0);(14,0);(15,0);(16,0);(17,5);(18,0);(19,2);(20,0);(21,0);(22,0);(23,3);(24,0);(25,0);(26,0);(27,2);(28,0);(29,0);(30,5);(31,0);(32,1);(33,0);(34,3);(35,9);(36,9);(37,5);(38,0);(39,0);(40,0);(41,0);(42,6);(43,0);(44,0);(45,0);(46,3);(47,1);(48,0);(49,0);(50,7);(51,2);(52,0);(53,0);(54,0);(55,6);(56,3);(57,7);(58,0);(59,9);(60,4);(61,0);(62,0);(63,0);(64,0);(65,0);(66,0);(67,1);(68,0);(69,5);(70,0);(71,0);(72,0);(73,4);(74,0);(75,0);(76,0);(77,0);(78,9);(79,0);(80,7)]

let board7 = [(0,4);(1,0);(2,3);(3,9);(4,2);(5,0);(6,0);(7,0);(8,0);(9,9);(10,8);(11,5);(12,6);(13,0);(14,7);(15,0);(16,4);(17,0);(18,0);(19,0);(20,0);(21,8);(22,0);(23,0);(24,0);(25,5);(26,9);(27,2);(28,1);(29,0);(30,0);(31,9);(32,0);(33,0);(34,0);(35,8);(36,0);(37,0);(38,0);(39,0);(40,0);(41,1);(42,0);(43,0);(44,0);(45,0);(46,0);(47,0);(48,2);(49,0);(50,0);(51,1);(52,0);(53,6);(54,0);(55,4);(56,0);(57,7);(58,0);(59,0);(60,2);(61,0);(62,0);(63,0);(64,3);(65,7);(66,0);(67,0);(68,0);(69,9);(70,6);(71,5);(72,0);(73,0);(74,0);(75,0);(76,0);(77,6);(78,7);(79,0);(80,0)]

let board8 = [(0,0);(1,4);(2,8);(3,0);(4,9);(5,0);(6,0);(7,7);(8,2);(9,0);(10,1);(11,0);(12,2);(13,0);(14,3);(15,8);(16,0);(17,0);(18,0);(19,0);(20,0);(21,0);(22,7);(23,4);(24,6);(25,1);(26,0);(27,0);(28,0);(29,0);(30,0);(31,4);(32,0);(33,0);(34,0);(35,0);(36,0);(37,9);(38,5);(39,0);(40,0);(41,1);(42,0);(43,0);(44,0);(45,0);(46,0);(47,0);(48,0);(49,8);(50,2);(51,0);(52,0);(53,9);(54,0);(55,8);(56,3);(57,0);(58,0);(59,0);(60,7);(61,0);(62,0);(63,6);(64,0);(65,0);(66,5);(67,0);(68,7);(69,0);(70,4);(71,0);(72,1);(73,0);(74,0);(75,0);(76,2);(77,0);(78,9);(79,6);(80,0)]

let board9 = [(0,0);(1,6);(2,0);(3,3);(4,0);(5,0);(6,0);(7,2);(8,0);(9,0);(10,0);(11,7);(12,0);(13,6);(14,1);(15,0);(16,4);(17,0);(18,8);(19,0);(20,0);(21,2);(22,7);(23,0);(24,0);(25,9);(26,5);(27,0);(28,0);(29,0);(30,0);(31,0);(32,0);(33,0);(34,8);(35,6);(36,0);(37,0);(38,0);(39,0);(40,3);(41,6);(42,5);(43,0);(44,0);(45,0);(46,0);(47,6);(48,4);(49,1);(50,0);(51,0);(52,0);(53,9);(54,0);(55,3);(56,0);(57,0);(58,2);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,9);(66,0);(67,0);(68,7);(69,1);(70,3);(71,0);(72,4);(73,0);(74,0);(75,1);(76,5);(77,3);(78,0);(79,0);(80,0)]

let board10 = [(0,4);(1,0);(2,0);(3,0);(4,0);(5,8);(6,0);(7,0);(8,2);(9,0);(10,0);(11,0);(12,0);(13,3);(14,2);(15,0);(16,6);(17,4);(18,0);(19,0);(20,0);(21,0);(22,0);(23,5);(24,0);(25,7);(26,0);(27,3);(28,0);(29,0);(30,5);(31,0);(32,7);(33,0);(34,2);(35,8);(36,7);(37,0);(38,8);(39,3);(40,0);(41,0);(42,6);(43,4);(44,0);(45,9);(46,4);(47,0);(48,0);(49,0);(50,0);(51,0);(52,1);(53,3);(54,0);(55,0);(56,0);(57,0);(58,0);(59,0);(60,0);(61,0);(62,0);(63,0);(64,7);(65,4);(66,0);(67,2);(68,0);(69,0);(70,0);(71,0);(72,2);(73,9);(74,0);(75,0);(76,6);(77,3);(78,0);(79,0);(80,7)]

let board11 = [(0,9);(1,0);(2,4);(3,0);(4,0);(5,3);(6,0);(7,0);(8,0);(9,0);(10,0);(11,0);(12,2);(13,0);(14,4);(15,0);(16,0);(17,9);(18,5);(19,2);(20,0);(21,9);(22,0);(23,0);(24,1);(25,0);(26,0);(27,0);(28,0);(29,2);(30,0);(31,0);(32,0);(33,6);(34,4);(35,0);(36,0);(37,3);(38,0);(39,0);(40,0);(41,0);(42,0);(43,5);(44,0);(45,7);(46,0);(47,0);(48,5);(49,0);(50,1);(51,0);(52,3);(53,0);(54,0);(55,0);(56,5);(57,8);(58,9);(59,0);(60,0);(61,0);(62,0);(63,4);(64,6);(65,0);(66,3);(67,0);(68,7);(69,5);(70,0);(71,0);(72,2);(73,9);(74,0);(75,0);(76,4);(77,0);(78,0);(79,1);(80,0)]

let board12 = [(0,4);(1,9);(2,5);(3,0);(4,0);(5,2);(6,0);(7,0);(8,0);(9,0);(10,0);(11,0);(12,0);(13,0);(14,0);(15,0);(16,1);(17,2);(18,0);(19,0);(20,1);(21,0);(22,7);(23,0);(24,3);(25,5);(26,0);(27,7);(28,0);(29,9);(30,6);(31,0);(32,0);(33,0);(34,3);(35,1);(36,0);(37,5);(38,0);(39,7);(40,8);(41,0);(42,0);(43,4);(44,0);(45,0);(46,0);(47,6);(48,0);(49,0);(50,4);(51,0);(52,2);(53,0);(54,0);(55,6);(56,0);(57,3);(58,0);(59,1);(60,0);(61,0);(62,0);(63,0);(64,0);(65,4);(66,5);(67,0);(68,7);(69,0);(70,6);(71,3);(72,0);(73,1);(74,0);(75,0);(76,0);(77,0);(78,0);(79,0);(80,0)]

let board13 = [(0,0);(1,4);(2,0);(3,0);(4,0);(5,0);(6,0);(7,0);(8,8);(9,0);(10,0);(11,0);(12,0);(13,4);(14,2);(15,0);(16,0);(17,0);(18,9);(19,0);(20,1);(21,6);(22,3);(23,0);(24,0);(25,0);(26,4);(27,0);(28,5);(29,9);(30,0);(31,8);(32,4);(33,7);(34,0);(35,3);(36,0);(37,0);(38,0);(39,9);(40,0);(41,0);(42,0);(43,0);(44,1);(45,0);(46,0);(47,0);(48,3);(49,0);(50,0);(51,0);(52,8);(53,0);(54,0);(55,1);(56,6);(57,0);(58,0);(59,5);(60,0);(61,9);(62,7);(63,0);(64,3);(65,0);(66,0);(67,6);(68,0);(69,4);(70,0);(71,5);(72,0);(73,0);(74,4);(75,0);(76,0);(77,0);(78,0);(79,2);(80,6)]

let board14 = [(0,0);(1,0);(2,0);(3,0);(4,8);(5,4);(6,0);(7,0);(8,0);(9,5);(10,0);(11,0);(12,0);(13,7);(14,1);(15,0);(16,0);(17,2);(18,1);(19,8);(20,0);(21,0);(22,9);(23,2);(24,0);(25,3);(26,5);(27,4);(28,0);(29,6);(30,0);(31,2);(32,0);(33,0);(34,0);(35,0);(36,0);(37,5);(38,2);(39,0);(40,3);(41,0);(42,0);(43,8);(44,1);(45,0);(46,3);(47,0);(48,0);(49,0);(50,0);(51,0);(52,2);(53,0);(54,0);(55,0);(56,0);(57,9);(58,1);(59,3);(60,2);(61,0);(62,0);(63,0);(64,7);(65,5);(66,0);(67,0);(68,0);(69,0);(70,9);(71,8);(72,0);(73,0);(74,0);(75,0);(76,0);(77,0);(78,0);(79,0);(80,3)]

let board15 = [(0,0);(1,0);(2,0);(3,0);(4,3);(5,5);(6,0);(7,8);(8,0);(9,0);(10,3);(11,7);(12,0);(13,0);(14,6);(15,9);(16,0);(17,0);(18,0);(19,0);(20,0);(21,0);(22,0);(23,0);(24,1);(25,6);(26,0);(27,0);(28,0);(29,3);(30,5);(31,9);(32,0);(33,2);(34,0);(35,8);(36,0);(37,2);(38,0);(39,0);(40,0);(41,0);(42,4);(43,5);(44,0);(45,0);(46,0);(47,4);(48,1);(49,2);(50,0);(51,0);(52,9);(53,6);(54,3);(55,0);(56,0);(57,0);(58,4);(59,0);(60,6);(61,0);(62,0);(63,2);(64,0);(65,1);(66,8);(67,7);(68,0);(69,0);(70,0);(71,0);(72,7);(73,0);(74,0);(75,0);(76,0);(77,0);(78,8);(79,0);(80,0)]

let board16 = [(0,0);(1,0);(2,2);(3,0);(4,0);(5,4);(6,0);(7,0);(8,5);(9,0);(10,0);(11,0);(12,0);(13,3);(14,1);(15,0);(16,6);(17,0);(18,0);(19,9);(20,0);(21,0);(22,0);(23,6);(24,3);(25,0);(26,0);(27,0);(28,0);(29,7);(30,0);(31,6);(32,9);(33,5);(34,0);(35,0);(36,0);(37,8);(38,0);(39,0);(40,4);(41,0);(42,2);(43,0);(44,0);(45,3);(46,5);(47,0);(48,1);(49,7);(50,0);(51,4);(52,0);(53,0);(54,8);(55,6);(56,0);(57,0);(58,0);(59,0);(60,0);(61,0);(62,1);(63,0);(64,0);(65,4);(66,0);(67,0);(68,0);(69,0);(70,0);(71,0);(72,2);(73,0);(74,0);(75,0);(76,0);(77,0);(78,0);(79,0);(80,7)]

let board17 = [(0,4);(1,0);(2,8);(3,0);(4,0);(5,5);(6,0);(7,0);(8,0);(9,0);(10,3);(11,0);(12,0);(13,7);(14,0);(15,0);(16,0);(17,4);(18,0);(19,1);(20,7);(21,0);(22,0);(23,6);(24,0);(25,0);(26,0);(27,3);(28,0);(29,0);(30,8);(31,0);(32,0);(33,0);(34,2);(35,0);(36,0);(37,2);(38,0);(39,6);(40,0);(41,0);(42,8);(43,4);(44,0);(45,0);(46,0);(47,6);(48,5);(49,0);(50,9);(51,0);(52,0);(53,7);(54,1);(55,9);(56,0);(57,0);(58,0);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,3);(66,0);(67,9);(68,0);(69,0);(70,0);(71,0);(72,2);(73,8);(74,0);(75,0);(76,0);(77,0);(78,0);(79,9);(80,0)]

let board18 = [(0,0);(1,0);(2,6);(3,0);(4,4);(5,0);(6,7);(7,3);(8,0);(9,0);(10,8);(11,0);(12,0);(13,0);(14,0);(15,0);(16,0);(17,0);(18,9);(19,0);(20,7);(21,6);(22,8);(23,0);(24,0);(25,0);(26,0);(27,0);(28,3);(29,0);(30,0);(31,0);(32,0);(33,1);(34,4);(35,0);(36,7);(37,9);(38,8);(39,0);(40,0);(41,0);(42,0);(43,6);(44,2);(45,0);(46,2);(47,0);(48,0);(49,6);(50,0);(51,0);(52,7);(53,0);(54,0);(55,0);(56,0);(57,0);(58,0);(59,4);(60,9);(61,0);(62,0);(63,4);(64,0);(65,0);(66,2);(67,9);(68,0);(69,0);(70,0);(71,0);(72,0);(73,0);(74,0);(75,0);(76,0);(77,5);(78,0);(79,1);(80,0)]

let board19 = [(0,0);(1,1);(2,0);(3,6);(4,0);(5,0);(6,0);(7,0);(8,0);(9,6);(10,0);(11,0);(12,0);(13,0);(14,0);(15,0);(16,1);(17,5);(18,7);(19,0);(20,0);(21,9);(22,0);(23,0);(24,8);(25,0);(26,0);(27,0);(28,7);(29,0);(30,0);(31,0);(32,0);(33,0);(34,0);(35,8);(36,5);(37,8);(38,2);(39,0);(40,3);(41,0);(42,0);(43,0);(44,6);(45,0);(46,0);(47,0);(48,4);(49,0);(50,0);(51,3);(52,0);(53,0);(54,8);(55,4);(56,0);(57,0);(58,1);(59,0);(60,6);(61,3);(62,0);(63,0);(64,0);(65,0);(66,0);(67,0);(68,0);(69,0);(70,0);(71,9);(72,0);(73,0);(74,0);(75,2);(76,9);(77,8);(78,5);(79,0);(80,0)]

let board20 = [(0,0);(1,0);(2,0);(3,1);(4,5);(5,0);(6,0);(7,7);(8,0);(9,6);(10,0);(11,0);(12,0);(13,3);(14,0);(15,0);(16,0);(17,0);(18,0);(19,0);(20,0);(21,0);(22,0);(23,0);(24,1);(25,0);(26,8);(27,0);(28,0);(29,0);(30,2);(31,0);(32,0);(33,8);(34,9);(35,0);(36,0);(37,7);(38,0);(39,0);(40,0);(41,4);(42,0);(43,0);(44,2);(45,4);(46,0);(47,9);(48,0);(49,0);(50,0);(51,7);(52,0);(53,1);(54,0);(55,0);(56,0);(57,6);(58,0);(59,0);(60,3);(61,0);(62,0);(63,7);(64,0);(65,2);(66,3);(67,0);(68,0);(69,4);(70,0);(71,0);(72,9);(73,0);(74,3);(75,4);(76,0);(77,0);(78,0);(79,5);(80,0)]

let board21 = [(0,3);(1,4);(2,0);(3,0);(4,0);(5,0);(6,2);(7,6);(8,0);(9,0);(10,5);(11,1);(12,0);(13,0);(14,0);(15,9);(16,0);(17,3);(18,0);(19,6);(20,9);(21,0);(22,0);(23,0);(24,5);(25,4);(26,0);(27,0);(28,0);(29,0);(30,6);(31,9);(32,1);(33,0);(34,0);(35,0);(36,4);(37,0);(38,0);(39,0);(40,0);(41,7);(42,0);(43,0);(44,0);(45,0);(46,1);(47,0);(48,5);(49,0);(50,0);(51,0);(52,8);(53,0);(54,0);(55,0);(56,0);(57,0);(58,0);(59,0);(60,0);(61,0);(62,5);(63,0);(64,0);(65,0);(66,0);(67,2);(68,0);(69,0);(70,0);(71,9);(72,0);(73,3);(74,0);(75,0);(76,0);(77,9);(78,8);(79,2);(80,0)]

let board22 = [(0,0);(1,3);(2,0);(3,0);(4,9);(5,0);(6,0);(7,0);(8,0);(9,1);(10,0);(11,0);(12,3);(13,0);(14,0);(15,6);(16,0);(17,0);(18,0);(19,0);(20,0);(21,0);(22,1);(23,6);(24,0);(25,0);(26,4);(27,0);(28,0);(29,0);(30,0);(31,5);(32,0);(33,9);(34,7);(35,2);(36,3);(37,0);(38,0);(39,6);(40,0);(41,2);(42,1);(43,0);(44,0);(45,0);(46,2);(47,0);(48,0);(49,0);(50,0);(51,8);(52,0);(53,0);(54,0);(55,0);(56,7);(57,1);(58,0);(59,0);(60,0);(61,0);(62,0);(63,8);(64,0);(65,0);(66,2);(67,4);(68,9);(69,0);(70,0);(71,0);(72,0);(73,0);(74,3);(75,0);(76,0);(77,8);(78,0);(79,5);(80,0)]

let board23 = [(0,0);(1,7);(2,0);(3,0);(4,0);(5,0);(6,1);(7,0);(8,0);(9,0);(10,0);(11,0);(12,2);(13,0);(14,5);(15,0);(16,0);(17,0);(18,4);(19,0);(20,0);(21,0);(22,8);(23,0);(24,0);(25,0);(26,0);(27,0);(28,0);(29,4);(30,0);(31,9);(32,3);(33,7);(34,0);(35,0);(36,1);(37,0);(38,0);(39,0);(40,4);(41,0);(42,0);(43,0);(44,3);(45,0);(46,0);(47,6);(48,0);(49,0);(50,0);(51,4);(52,2);(53,0);(54,2);(55,0);(56,0);(57,0);(58,0);(59,0);(60,0);(61,7);(62,5);(63,0);(64,5);(65,0);(66,4);(67,0);(68,9);(69,0);(70,0);(71,0);(72,0);(73,9);(74,1);(75,0);(76,2);(77,0);(78,0);(79,8);(80,4)]

let board24 = [(0,0);(1,0);(2,0);(3,0);(4,2);(5,0);(6,7);(7,0);(8,0);(9,0);(10,1);(11,0);(12,5);(13,0);(14,0);(15,4);(16,0);(17,0);(18,0);(19,0);(20,5);(21,0);(22,0);(23,6);(24,0);(25,2);(26,0);(27,1);(28,0);(29,0);(30,7);(31,6);(32,5);(33,0);(34,4);(35,0);(36,9);(37,0);(38,0);(39,0);(40,0);(41,0);(42,0);(43,0);(44,8);(45,0);(46,2);(47,0);(48,9);(49,0);(50,0);(51,0);(52,1);(53,0);(54,0);(55,0);(56,3);(57,6);(58,0);(59,8);(60,0);(61,0);(62,0);(63,8);(64,0);(65,9);(66,0);(67,0);(68,1);(69,6);(70,5);(71,0);(72,5);(73,0);(74,0);(75,0);(76,0);(77,0);(78,0);(79,0);(80,0)]

let board25 = [(0,9);(1,0);(2,0);(3,0);(4,3);(5,0);(6,4);(7,0);(8,0);(9,0);(10,2);(11,1);(12,0);(13,0);(14,4);(15,0);(16,0);(17,0);(18,0);(19,7);(20,0);(21,2);(22,8);(23,0);(24,0);(25,0);(26,0);(27,6);(28,9);(29,0);(30,0);(31,0);(32,0);(33,5);(34,0);(35,0);(36,8);(37,0);(38,7);(39,0);(40,9);(41,0);(42,0);(43,2);(44,0);(45,1);(46,0);(47,0);(48,0);(49,0);(50,0);(51,8);(52,0);(53,9);(54,0);(55,4);(56,0);(57,0);(58,0);(59,6);(60,0);(61,0);(62,8);(63,0);(64,0);(65,0);(66,0);(67,7);(68,5);(69,0);(70,0);(71,0);(72,0);(73,0);(74,9);(75,0);(76,0);(77,8);(78,0);(79,0);(80,3)]

let board26 = [(0,0);(1,1);(2,5);(3,0);(4,0);(5,0);(6,6);(7,0);(8,4);(9,0);(10,0);(11,0);(12,3);(13,8);(14,4);(15,0);(16,1);(17,0);(18,0);(19,0);(20,0);(21,0);(22,0);(23,0);(24,0);(25,0);(26,2);(27,2);(28,8);(29,3);(30,0);(31,0);(32,1);(33,0);(34,4);(35,0);(36,0);(37,7);(38,0);(39,0);(40,0);(41,0);(42,0);(43,0);(44,0);(45,0);(46,4);(47,0);(48,0);(49,7);(50,0);(51,0);(52,0);(53,0);(54,1);(55,0);(56,4);(57,0);(58,5);(59,2);(60,0);(61,0);(62,0);(63,0);(64,0);(65,0);(66,0);(67,0);(68,9);(69,0);(70,2);(71,0);(72,0);(73,2);(74,9);(75,0);(76,0);(77,0);(78,0);(79,6);(80,1)]

let board27 = [(0,5);(1,0);(2,2);(3,0);(4,3);(5,0);(6,0);(7,0);(8,0);(9,0);(10,7);(11,0);(12,0);(13,0);(14,1);(15,0);(16,0);(17,0);(18,1);(19,0);(20,0);(21,7);(22,0);(23,6);(24,0);(25,0);(26,0);(27,0);(28,0);(29,0);(30,0);(31,0);(32,0);(33,0);(34,0);(35,1);(36,0);(37,0);(38,4);(39,3);(40,0);(41,0);(42,8);(43,0);(44,9);(45,0);(46,0);(47,0);(48,0);(49,0);(50,4);(51,0);(52,7);(53,3);(54,9);(55,6);(56,1);(57,0);(58,8);(59,0);(60,0);(61,3);(62,0);(63,0);(64,0);(65,8);(66,0);(67,0);(68,0);(69,0);(70,0);(71,2);(72,0);(73,5);(74,0);(75,0);(76,1);(77,0);(78,6);(79,8);(80,0)]

let board28 = [(0,0);(1,0);(2,0);(3,9);(4,0);(5,3);(6,0);(7,0);(8,8);(9,0);(10,0);(11,0);(12,0);(13,0);(14,0);(15,7);(16,0);(17,0);(18,0);(19,2);(20,3);(21,8);(22,0);(23,0);(24,1);(25,5);(26,0);(27,0);(28,6);(29,1);(30,5);(31,0);(32,4);(33,0);(34,0);(35,0);(36,0);(37,9);(38,0);(39,2);(40,0);(41,8);(42,4);(43,3);(44,6);(45,0);(46,3);(47,2);(48,0);(49,0);(50,0);(51,0);(52,0);(53,0);(54,0);(55,0);(56,0);(57,6);(58,0);(59,9);(60,0);(61,0);(62,0);(63,0);(64,7);(65,8);(66,0);(67,0);(68,0);(69,0);(70,0);(71,0);(72,0);(73,0);(74,0);(75,0);(76,0);(77,0);(78,0);(79,6);(80,2)]

let board29 = [(0,0);(1,0);(2,8);(3,1);(4,0);(5,0);(6,0);(7,0);(8,3);(9,0);(10,0);(11,0);(12,0);(13,0);(14,8);(15,4);(16,0);(17,0);(18,0);(19,0);(20,1);(21,7);(22,9);(23,3);(24,8);(25,0);(26,0);(27,0);(28,9);(29,0);(30,0);(31,0);(32,0);(33,0);(34,0);(35,0);(36,0);(37,0);(38,4);(39,0);(40,0);(41,0);(42,0);(43,8);(44,2);(45,6);(46,0);(47,0);(48,9);(49,0);(50,0);(51,0);(52,0);(53,0);(54,1);(55,0);(56,6);(57,8);(58,2);(59,0);(60,0);(61,7);(62,0);(63,4);(64,7);(65,0);(66,0);(67,0);(68,0);(69,0);(70,0);(71,8);(72,0);(73,8);(74,0);(75,6);(76,0);(77,5);(78,0);(79,0);(80,0)]

let board30 = [(0,0);(1,0);(2,0);(3,0);(4,0);(5,0);(6,9);(7,0);(8,2);(9,5);(10,0);(11,0);(12,0);(13,0);(14,0);(15,0);(16,0);(17,0);(18,0);(19,0);(20,9);(21,5);(22,8);(23,7);(24,0);(25,0);(26,0);(27,0);(28,0);(29,2);(30,0);(31,9);(32,0);(33,0);(34,8);(35,0);(36,0);(37,0);(38,0);(39,0);(40,0);(41,0);(42,0);(43,6);(44,0);(45,0);(46,0);(47,4);(48,0);(49,5);(50,0);(51,1);(52,0);(53,3);(54,1);(55,0);(56,0);(57,7);(58,0);(59,8);(60,0);(61,0);(62,0);(63,0);(64,2);(65,5);(66,6);(67,0);(68,3);(69,4);(70,7);(71,0);(72,0);(73,0);(74,6);(75,9);(76,0);(77,0);(78,0);(79,3);(80,0)]

let board31 = [(0,0);(1,0);(2,0);(3,7);(4,5);(5,0);(6,0);(7,0);(8,0);(9,0);(10,0);(11,7);(12,2);(13,0);(14,0);(15,0);(16,1);(17,0);(18,3);(19,0);(20,1);(21,0);(22,0);(23,0);(24,0);(25,0);(26,4);(27,0);(28,0);(29,0);(30,0);(31,0);(32,0);(33,4);(34,5);(35,7);(36,0);(37,2);(38,0);(39,0);(40,4);(41,7);(42,1);(43,6);(44,0);(45,0);(46,7);(47,4);(48,0);(49,0);(50,0);(51,9);(52,0);(53,0);(54,0);(55,0);(56,2);(57,0);(58,0);(59,6);(60,5);(61,0);(62,0);(63,7);(64,0);(65,0);(66,9);(67,0);(68,0);(69,0);(70,0);(71,3);(72,0);(73,9);(74,0);(75,5);(76,0);(77,3);(78,0);(79,2);(80,0)]

let board32 = [(0,1);(1,8);(2,6);(3,0);(4,9);(5,0);(6,0);(7,3);(8,0);(9,5);(10,0);(11,9);(12,0);(13,7);(14,3);(15,0);(16,0);(17,4);(18,0);(19,0);(20,0);(21,0);(22,0);(23,1);(24,0);(25,0);(26,9);(27,0);(28,0);(29,0);(30,0);(31,0);(32,2);(33,0);(34,7);(35,0);(36,4);(37,0);(38,3);(39,8);(40,0);(41,0);(42,9);(43,0);(44,0);(45,2);(46,7);(47,1);(48,9);(49,0);(50,0);(51,5);(52,0);(53,0);(54,0);(55,0);(56,0);(57,3);(58,0);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,0);(66,0);(67,1);(68,0);(69,8);(70,0);(71,3);(72,0);(73,0);(74,8);(75,0);(76,0);(77,4);(78,0);(79,0);(80,0)]

let board33 = [(0,0);(1,0);(2,0);(3,0);(4,0);(5,0);(6,0);(7,1);(8,0);(9,1);(10,0);(11,0);(12,2);(13,0);(14,0);(15,7);(16,4);(17,9);(18,9);(19,0);(20,0);(21,0);(22,4);(23,8);(24,6);(25,0);(26,2);(27,0);(28,0);(29,6);(30,0);(31,8);(32,0);(33,0);(34,0);(35,0);(36,0);(37,0);(38,7);(39,0);(40,9);(41,0);(42,0);(43,0);(44,5);(45,0);(46,0);(47,1);(48,0);(49,5);(50,2);(51,0);(52,3);(53,6);(54,3);(55,6);(56,4);(57,0);(58,0);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,0);(66,0);(67,0);(68,0);(69,0);(70,6);(71,0);(72,2);(73,0);(74,8);(75,0);(76,0);(77,4);(78,0);(79,9);(80,0)]

let board34 = [(0,0);(1,1);(2,0);(3,0);(4,0);(5,0);(6,8);(7,7);(8,0);(9,0);(10,0);(11,9);(12,5);(13,2);(14,0);(15,0);(16,1);(17,0);(18,0);(19,0);(20,3);(21,0);(22,0);(23,1);(24,0);(25,2);(26,0);(27,0);(28,6);(29,0);(30,2);(31,1);(32,0);(33,0);(34,0);(35,7);(36,0);(37,0);(38,1);(39,0);(40,4);(41,0);(42,0);(43,5);(44,0);(45,7);(46,0);(47,0);(48,0);(49,8);(50,0);(51,0);(52,9);(53,0);(54,0);(55,3);(56,0);(57,0);(58,0);(59,4);(60,1);(61,0);(62,0);(63,0);(64,5);(65,2);(66,0);(67,0);(68,8);(69,0);(70,0);(71,0);(72,0);(73,0);(74,0);(75,0);(76,0);(77,2);(78,5);(79,4);(80,0)]

let board35 = [(0,5);(1,0);(2,3);(3,6);(4,0);(5,0);(6,9);(7,0);(8,0);(9,0);(10,0);(11,0);(12,0);(13,0);(14,0);(15,0);(16,0);(17,3);(18,0);(19,4);(20,0);(21,5);(22,0);(23,0);(24,0);(25,0);(26,1);(27,0);(28,0);(29,0);(30,2);(31,0);(32,0);(33,0);(34,5);(35,0);(36,0);(37,2);(38,0);(39,0);(40,0);(41,4);(42,8);(43,0);(44,0);(45,0);(46,0);(47,0);(48,0);(49,8);(50,7);(51,3);(52,2);(53,0);(54,6);(55,1);(56,4);(57,8);(58,2);(59,0);(60,0);(61,3);(62,0);(63,2);(64,0);(65,0);(66,3);(67,0);(68,9);(69,0);(70,0);(71,8);(72,0);(73,0);(74,9);(75,4);(76,0);(77,0);(78,0);(79,0);(80,0)]

let board36 = [(0,0);(1,8);(2,3);(3,0);(4,0);(5,0);(6,0);(7,9);(8,0);(9,0);(10,1);(11,0);(12,5);(13,0);(14,8);(15,3);(16,0);(17,0);(18,7);(19,0);(20,0);(21,0);(22,0);(23,2);(24,0);(25,0);(26,8);(27,0);(28,0);(29,0);(30,0);(31,0);(32,0);(33,0);(34,0);(35,0);(36,0);(37,2);(38,8);(39,0);(40,0);(41,1);(42,6);(43,0);(44,9);(45,0);(46,0);(47,0);(48,0);(49,6);(50,0);(51,8);(52,0);(53,1);(54,8);(55,9);(56,0);(57,0);(58,0);(59,5);(60,1);(61,0);(62,4);(63,0);(64,0);(65,4);(66,0);(67,1);(68,0);(69,9);(70,0);(71,0);(72,0);(73,6);(74,0);(75,0);(76,4);(77,0);(78,0);(79,0);(80,5)]

let board37 = [(0,0);(1,5);(2,8);(3,0);(4,0);(5,9);(6,0);(7,0);(8,1);(9,0);(10,0);(11,4);(12,0);(13,2);(14,0);(15,0);(16,0);(17,0);(18,0);(19,7);(20,0);(21,0);(22,0);(23,0);(24,0);(25,3);(26,6);(27,2);(28,0);(29,0);(30,0);(31,4);(32,8);(33,0);(34,0);(35,0);(36,0);(37,0);(38,6);(39,0);(40,1);(41,3);(42,7);(43,0);(44,2);(45,5);(46,0);(47,0);(48,9);(49,6);(50,0);(51,0);(52,0);(53,8);(54,0);(55,0);(56,0);(57,0);(58,0);(59,6);(60,1);(61,0);(62,5);(63,6);(64,0);(65,5);(66,0);(67,0);(68,0);(69,0);(70,0);(71,0);(72,0);(73,0);(74,0);(75,2);(76,0);(77,0);(78,6);(79,9);(80,0)]

let board38 = [(0,0);(1,0);(2,0);(3,0);(4,0);(5,0);(6,2);(7,8);(8,7);(9,7);(10,1);(11,0);(12,0);(13,8);(14,0);(15,5);(16,6);(17,0);(18,0);(19,3);(20,0);(21,0);(22,0);(23,0);(24,0);(25,0);(26,0);(27,4);(28,0);(29,5);(30,0);(31,0);(32,0);(33,0);(34,0);(35,0);(36,0);(37,0);(38,1);(39,4);(40,0);(41,3);(42,0);(43,2);(44,0);(45,3);(46,0);(47,7);(48,0);(49,5);(50,2);(51,4);(52,0);(53,0);(54,0);(55,0);(56,0);(57,0);(58,0);(59,1);(60,0);(61,7);(62,4);(63,0);(64,0);(65,0);(66,0);(67,0);(68,0);(69,8);(70,0);(71,0);(72,0);(73,8);(74,4);(75,0);(76,0);(77,5);(78,9);(79,3);(80,0)]

let board39 = [(0,0);(1,0);(2,1);(3,0);(4,0);(5,0);(6,0);(7,8);(8,0);(9,0);(10,9);(11,8);(12,5);(13,0);(14,0);(15,0);(16,0);(17,7);(18,6);(19,4);(20,3);(21,7);(22,0);(23,8);(24,1);(25,0);(26,5);(27,0);(28,0);(29,2);(30,6);(31,0);(32,0);(33,0);(34,0);(35,4);(36,0);(37,0);(38,0);(39,0);(40,0);(41,0);(42,0);(43,6);(44,0);(45,5);(46,0);(47,0);(48,0);(49,0);(50,1);(51,0);(52,0);(53,0);(54,0);(55,2);(56,0);(57,4);(58,3);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,6);(66,0);(67,0);(68,0);(69,4);(70,0);(71,8);(72,3);(73,0);(74,0);(75,8);(76,0);(77,7);(78,2);(79,0);(80,0)]

let board40 = [(0,0);(1,1);(2,0);(3,0);(4,5);(5,0);(6,0);(7,0);(8,0);(9,0);(10,0);(11,0);(12,0);(13,0);(14,4);(15,0);(16,0);(17,0);(18,6);(19,3);(20,9);(21,8);(22,0);(23,0);(24,1);(25,0);(26,5);(27,0);(28,0);(29,0);(30,0);(31,6);(32,0);(33,3);(34,0);(35,0);(36,2);(37,9);(38,0);(39,0);(40,0);(41,0);(42,0);(43,5);(44,0);(45,3);(46,0);(47,0);(48,7);(49,0);(50,5);(51,8);(52,0);(53,0);(54,9);(55,0);(56,0);(57,0);(58,8);(59,0);(60,0);(61,0);(62,6);(63,0);(64,5);(65,1);(66,6);(67,0);(68,0);(69,9);(70,0);(71,0);(72,0);(73,6);(74,0);(75,0);(76,0);(77,1);(78,5);(79,0);(80,2)]

let board41 = [(0,5);(1,8);(2,0);(3,0);(4,0);(5,0);(6,0);(7,0);(8,0);(9,9);(10,0);(11,3);(12,0);(13,0);(14,4);(15,0);(16,0);(17,1);(18,0);(19,0);(20,6);(21,0);(22,0);(23,0);(24,0);(25,0);(26,0);(27,8);(28,0);(29,1);(30,0);(31,0);(32,7);(33,0);(34,3);(35,0);(36,0);(37,5);(38,7);(39,0);(40,3);(41,0);(42,0);(43,0);(44,6);(45,0);(46,0);(47,9);(48,0);(49,4);(50,5);(51,1);(52,0);(53,0);(54,4);(55,0);(56,0);(57,0);(58,0);(59,0);(60,0);(61,6);(62,2);(63,0);(64,0);(65,0);(66,6);(67,9);(68,0);(69,7);(70,0);(71,0);(72,0);(73,9);(74,0);(75,4);(76,0);(77,2);(78,0);(79,0);(80,3)]

let board42 = [(0,0);(1,5);(2,8);(3,0);(4,0);(5,0);(6,0);(7,0);(8,1);(9,0);(10,0);(11,4);(12,0);(13,2);(14,0);(15,0);(16,5);(17,0);(18,7);(19,9);(20,0);(21,0);(22,0);(23,0);(24,4);(25,0);(26,6);(27,2);(28,8);(29,1);(30,0);(31,0);(32,3);(33,0);(34,0);(35,0);(36,9);(37,0);(38,0);(39,0);(40,0);(41,0);(42,0);(43,0);(44,0);(45,6);(46,3);(47,0);(48,0);(49,4);(50,0);(51,5);(52,1);(53,0);(54,0);(55,0);(56,0);(57,0);(58,0);(59,2);(60,0);(61,4);(62,0);(63,5);(64,0);(65,0);(66,0);(67,0);(68,8);(69,6);(70,3);(71,0);(72,4);(73,2);(74,0);(75,1);(76,0);(77,0);(78,0);(79,0);(80,0)]

let board43 = [(0,0);(1,0);(2,0);(3,2);(4,1);(5,0);(6,0);(7,0);(8,0);(9,0);(10,2);(11,9);(12,0);(13,6);(14,0);(15,0);(16,0);(17,1);(18,0);(19,0);(20,5);(21,0);(22,9);(23,0);(24,0);(25,0);(26,7);(27,9);(28,0);(29,0);(30,5);(31,3);(32,0);(33,0);(34,0);(35,0);(36,0);(37,0);(38,3);(39,0);(40,0);(41,0);(42,0);(43,0);(44,0);(45,1);(46,0);(47,2);(48,0);(49,7);(50,0);(51,0);(52,9);(53,0);(54,5);(55,0);(56,1);(57,0);(58,8);(59,0);(60,3);(61,0);(62,9);(63,0);(64,0);(65,0);(66,4);(67,0);(68,0);(69,0);(70,1);(71,8);(72,3);(73,0);(74,7);(75,0);(76,0);(77,1);(78,0);(79,4);(80,0)]

let board44 = [(0,9);(1,7);(2,0);(3,6);(4,8);(5,0);(6,0);(7,0);(8,1);(9,3);(10,0);(11,0);(12,0);(13,0);(14,2);(15,0);(16,8);(17,0);(18,0);(19,0);(20,8);(21,0);(22,0);(23,3);(24,0);(25,0);(26,0);(27,0);(28,6);(29,0);(30,0);(31,3);(32,0);(33,9);(34,4);(35,0);(36,7);(37,0);(38,0);(39,0);(40,0);(41,0);(42,0);(43,0);(44,8);(45,8);(46,3);(47,0);(48,4);(49,0);(50,7);(51,2);(52,6);(53,0);(54,0);(55,0);(56,0);(57,1);(58,5);(59,8);(60,0);(61,0);(62,4);(63,0);(64,0);(65,0);(66,0);(67,0);(68,0);(69,0);(70,0);(71,0);(72,5);(73,0);(74,7);(75,0);(76,0);(77,0);(78,0);(79,9);(80,0)]

let board45 = [(0,0);(1,0);(2,0);(3,0);(4,0);(5,7);(6,2);(7,4);(8,9);(9,0);(10,0);(11,0);(12,0);(13,0);(14,0);(15,0);(16,0);(17,0);(18,0);(19,2);(20,0);(21,8);(22,3);(23,5);(24,0);(25,0);(26,6);(27,7);(28,0);(29,0);(30,0);(31,0);(32,3);(33,0);(34,0);(35,5);(36,0);(37,0);(38,8);(39,0);(40,5);(41,0);(42,7);(43,0);(44,0);(45,0);(46,0);(47,0);(48,0);(49,8);(50,6);(51,0);(52,0);(53,1);(54,9);(55,3);(56,0);(57,0);(58,0);(59,0);(60,6);(61,0);(62,0);(63,2);(64,0);(65,0);(66,5);(67,6);(68,1);(69,0);(70,0);(71,0);(72,0);(73,4);(74,1);(75,0);(76,0);(77,9);(78,5);(79,0);(80,0)]

let board46 = [(0,1);(1,8);(2,0);(3,0);(4,3);(5,0);(6,0);(7,7);(8,4);(9,0);(10,0);(11,2);(12,0);(13,0);(14,0);(15,0);(16,0);(17,1);(18,0);(19,0);(20,0);(21,7);(22,0);(23,0);(24,0);(25,0);(26,0);(27,9);(28,0);(29,0);(30,8);(31,0);(32,0);(33,0);(34,0);(35,0);(36,3);(37,0);(38,0);(39,0);(40,0);(41,7);(42,0);(43,0);(44,0);(45,2);(46,4);(47,5);(48,0);(49,0);(50,3);(51,8);(52,9);(53,0);(54,0);(55,9);(56,0);(57,0);(58,1);(59,0);(60,0);(61,2);(62,0);(63,0);(64,1);(65,0);(66,3);(67,8);(68,0);(69,0);(70,4);(71,0);(72,0);(73,0);(74,0);(75,9);(76,0);(77,0);(78,0);(79,0);(80,5)]

let board47 = [(0,0);(1,0);(2,9);(3,4);(4,3);(5,6);(6,5);(7,0);(8,0);(9,0);(10,0);(11,0);(12,0);(13,0);(14,2);(15,0);(16,0);(17,0);(18,6);(19,0);(20,5);(21,0);(22,0);(23,0);(24,4);(25,1);(26,0);(27,0);(28,9);(29,2);(30,8);(31,0);(32,0);(33,0);(34,0);(35,7);(36,1);(37,0);(38,8);(39,0);(40,6);(41,0);(42,0);(43,0);(44,0);(45,0);(46,0);(47,0);(48,7);(49,0);(50,0);(51,0);(52,0);(53,0);(54,2);(55,0);(56,0);(57,6);(58,0);(59,0);(60,0);(61,0);(62,0);(63,0);(64,0);(65,0);(66,3);(67,0);(68,4);(69,0);(70,6);(71,5);(72,0);(73,0);(74,4);(75,0);(76,1);(77,7);(78,0);(79,0);(80,0)]

let board48 = [(0,0);(1,0);(2,0);(3,6);(4,0);(5,0);(6,0);(7,0);(8,0);(9,0);(10,6);(11,1);(12,0);(13,0);(14,0);(15,0);(16,2);(17,7);(18,0);(19,2);(20,0);(21,3);(22,0);(23,0);(24,9);(25,0);(26,0);(27,0);(28,0);(29,6);(30,4);(31,0);(32,0);(33,0);(34,0);(35,2);(36,7);(37,0);(38,0);(39,0);(40,8);(41,1);(42,0);(43,9);(44,0);(45,8);(46,0);(47,0);(48,0);(49,0);(50,0);(51,1);(52,0);(53,5);(54,2);(55,0);(56,0);(57,0);(58,0);(59,3);(60,0);(61,0);(62,9);(63,5);(64,0);(65,0);(66,2);(67,0);(68,7);(69,4);(70,0);(71,0);(72,0);(73,0);(74,0);(75,9);(76,0);(77,0);(78,0);(79,0);(80,1)]

let board49 = [(0,0);(1,0);(2,0);(3,0);(4,0);(5,2);(6,0);(7,9);(8,3);(9,2);(10,0);(11,0);(12,4);(13,0);(14,0);(15,0);(16,0);(17,0);(18,0);(19,8);(20,0);(21,7);(22,0);(23,0);(24,1);(25,0);(26,0);(27,0);(28,4);(29,0);(30,0);(31,7);(32,3);(33,0);(34,8);(35,6);(36,0);(37,0);(38,0);(39,0);(40,6);(41,0);(42,0);(43,0);(44,0);(45,8);(46,3);(47,0);(48,0);(49,0);(50,0);(51,0);(52,1);(53,0);(54,0);(55,2);(56,9);(57,0);(58,0);(59,5);(60,8);(61,0);(62,0);(63,0);(64,1);(65,8);(66,0);(67,0);(68,7);(69,4);(70,0);(71,0);(72,0);(73,0);(74,0);(75,6);(76,4);(77,0);(78,0);(79,0);(80,0)]

let board50 = [(0,7);(1,0);(2,0);(3,6);(4,9);(5,0);(6,0);(7,0);(8,0);(9,2);(10,0);(11,8);(12,0);(13,0);(14,7);(15,5);(16,9);(17,6);(18,0);(19,0);(20,0);(21,0);(22,0);(23,0);(24,0);(25,0);(26,7);(27,6);(28,3);(29,0);(30,0);(31,0);(32,0);(33,0);(34,7);(35,0);(36,9);(37,0);(38,0);(39,0);(40,8);(41,0);(42,4);(43,0);(44,0);(45,0);(46,0);(47,0);(48,4);(49,0);(50,0);(51,6);(52,3);(53,0);(54,5);(55,9);(56,0);(57,0);(58,0);(59,0);(60,0);(61,1);(62,0);(63,0);(64,0);(65,0);(66,7);(67,0);(68,0);(69,0);(70,0);(71,2);(72,8);(73,2);(74,0);(75,0);(76,0);(77,0);(78,7);(79,0);(80,0)]

let board51 = [(0,0);(1,0);(2,6);(3,0);(4,0);(5,4);(6,0);(7,7);(8,0);(9,0);(10,0);(11,0);(12,7);(13,0);(14,9);(15,4);(16,0);(17,0);(18,4);(19,0);(20,0);(21,0);(22,0);(23,0);(24,9);(25,5);(26,0);(27,0);(28,3);(29,0);(30,6);(31,5);(32,0);(33,0);(34,9);(35,2);(36,1);(37,0);(38,0);(39,2);(40,0);(41,3);(42,0);(43,0);(44,0);(45,0);(46,2);(47,0);(48,0);(49,0);(50,0);(51,0);(52,0);(53,8);(54,9);(55,7);(56,0);(57,0);(58,3);(59,0);(60,0);(61,6);(62,0);(63,0);(64,6);(65,0);(66,0);(67,7);(68,0);(69,0);(70,0);(71,0);(72,3);(73,0);(74,0);(75,0);(76,0);(77,0);(78,0);(79,1);(80,0)]

let board52 = [(0,0);(1,0);(2,0);(3,9);(4,7);(5,4);(6,0);(7,0);(8,0);(9,0);(10,0);(11,0);(12,0);(13,5);(14,0);(15,0);(16,0);(17,0);(18,0);(19,0);(20,0);(21,0);(22,0);(23,0);(24,3);(25,0);(26,6);(27,0);(28,7);(29,4);(30,0);(31,8);(32,1);(33,0);(34,0);(35,0);(36,0);(37,0);(38,6);(39,7);(40,0);(41,0);(42,5);(43,4);(44,0);(45,8);(46,0);(47,0);(48,0);(49,4);(50,0);(51,0);(52,7);(53,3);(54,0);(55,6);(56,3);(57,4);(58,0);(59,0);(60,0);(61,8);(62,0);(63,0);(64,0);(65,8);(66,0);(67,6);(68,0);(69,0);(70,0);(71,0);(72,4);(73,0);(74,0);(75,1);(76,0);(77,0);(78,2);(79,0);(80,0)]

let board53 = [(0,2);(1,6);(2,0);(3,9);(4,5);(5,0);(6,0);(7,4);(8,0);(9,0);(10,0);(11,4);(12,0);(13,3);(14,0);(15,2);(16,0);(17,8);(18,0);(19,0);(20,3);(21,0);(22,0);(23,2);(24,9);(25,1);(26,0);(27,0);(28,0);(29,0);(30,5);(31,0);(32,0);(33,0);(34,0);(35,0);(36,6);(37,9);(38,0);(39,0);(40,0);(41,1);(42,0);(43,7);(44,0);(45,0);(46,0);(47,0);(48,8);(49,6);(50,9);(51,0);(52,0);(53,0);(54,0);(55,0);(56,0);(57,0);(58,1);(59,0);(60,0);(61,0);(62,7);(63,7);(64,0);(65,0);(66,0);(67,0);(68,0);(69,0);(70,0);(71,0);(72,0);(73,3);(74,0);(75,0);(76,0);(77,0);(78,0);(79,9);(80,6)]

let board54 = [(0,0);(1,0);(2,0);(3,0);(4,8);(5,0);(6,0);(7,0);(8,0);(9,2);(10,8);(11,0);(12,3);(13,0);(14,6);(15,0);(16,0);(17,5);(18,5);(19,0);(20,0);(21,0);(22,0);(23,0);(24,0);(25,2);(26,0);(27,0);(28,7);(29,0);(30,9);(31,0);(32,0);(33,0);(34,0);(35,8);(36,0);(37,0);(38,2);(39,7);(40,0);(41,0);(42,0);(43,4);(44,0);(45,0);(46,1);(47,0);(48,0);(49,0);(50,8);(51,7);(52,0);(53,0);(54,0);(55,0);(56,0);(57,0);(58,5);(59,0);(60,6);(61,0);(62,0);(63,3);(64,9);(65,0);(66,2);(67,0);(68,0);(69,0);(70,0);(71,0);(72,0);(73,0);(74,0);(75,4);(76,6);(77,0);(78,2);(79,7);(80,9)]

let board55 = [(0,0);(1,0);(2,0);(3,0);(4,0);(5,6);(6,0);(7,0);(8,2);(9,0);(10,0);(11,0);(12,3);(13,0);(14,0);(15,5);(16,4);(17,0);(18,0);(19,2);(20,9);(21,1);(22,0);(23,7);(24,6);(25,0);(26,0);(27,0);(28,8);(29,0);(30,0);(31,0);(32,0);(33,0);(34,0);(35,9);(36,5);(37,0);(38,0);(39,2);(40,0);(41,9);(42,0);(43,8);(44,3);(45,0);(46,0);(47,0);(48,8);(49,0);(50,0);(51,2);(52,5);(53,0);(54,0);(55,0);(56,3);(57,0);(58,0);(59,0);(60,0);(61,0);(62,0);(63,2);(64,7);(65,1);(66,0);(67,0);(68,5);(69,0);(70,0);(71,0);(72,9);(73,0);(74,0);(75,0);(76,0);(77,0);(78,0);(79,7);(80,0)]

let board56 = [(0,0);(1,5);(2,0);(3,0);(4,1);(5,4);(6,8);(7,0);(8,0);(9,2);(10,3);(11,4);(12,0);(13,7);(14,8);(15,9);(16,0);(17,0);(18,0);(19,0);(20,0);(21,0);(22,0);(23,0);(24,0);(25,0);(26,0);(27,0);(28,0);(29,0);(30,0);(31,0);(32,0);(33,0);(34,0);(35,5);(36,0);(37,9);(38,0);(39,7);(40,0);(41,0);(42,0);(43,3);(44,0);(45,8);(46,0);(47,0);(48,3);(49,0);(50,2);(51,0);(52,7);(53,0);(54,0);(55,0);(56,0);(57,1);(58,6);(59,0);(60,0);(61,0);(62,0);(63,0);(64,2);(65,3);(66,0);(67,0);(68,0);(69,0);(70,0);(71,0);(72,0);(73,8);(74,7);(75,4);(76,0);(77,0);(78,3);(79,0);(80,6)]

let board57 = [(0,0);(1,0);(2,0);(3,0);(4,4);(5,0);(6,0);(7,0);(8,6);(9,2);(10,0);(11,0);(12,5);(13,0);(14,1);(15,0);(16,0);(17,0);(18,9);(19,6);(20,0);(21,0);(22,7);(23,0);(24,0);(25,2);(26,0);(27,3);(28,0);(29,6);(30,0);(31,0);(32,0);(33,0);(34,4);(35,8);(36,0);(37,8);(38,0);(39,0);(40,0);(41,9);(42,0);(43,0);(44,1);(45,0);(46,0);(47,0);(48,0);(49,0);(50,0);(51,6);(52,5);(53,0);(54,0);(55,0);(56,0);(57,0);(58,0);(59,0);(60,0);(61,6);(62,0);(63,1);(64,9);(65,5);(66,0);(67,2);(68,0);(69,3);(70,0);(71,0);(72,0);(73,0);(74,0);(75,3);(76,9);(77,0);(78,0);(79,1);(80,0)]

let board58 = [(0,0);(1,0);(2,0);(3,6);(4,0);(5,0);(6,0);(7,0);(8,0);(9,0);(10,4);(11,0);(12,0);(13,0);(14,0);(15,0);(16,8);(17,7);(18,7);(19,0);(20,2);(21,0);(22,3);(23,0);(24,0);(25,0);(26,0);(27,0);(28,1);(29,0);(30,2);(31,0);(32,9);(33,3);(34,0);(35,0);(36,0);(37,3);(38,0);(39,8);(40,0);(41,0);(42,7);(43,0);(44,4);(45,6);(46,0);(47,0);(48,0);(49,0);(50,0);(51,0);(52,0);(53,9);(54,0);(55,0);(56,0);(57,0);(58,0);(59,4);(60,0);(61,9);(62,0);(63,5);(64,0);(65,0);(66,1);(67,2);(68,6);(69,0);(70,0);(71,8);(72,4);(73,0);(74,1);(75,0);(76,0);(77,0);(78,0);(79,3);(80,0)]

let board59 = [(0,0);(1,8);(2,2);(3,1);(4,0);(5,0);(6,0);(7,0);(8,0);(9,0);(10,0);(11,5);(12,0);(13,6);(14,0);(15,0);(16,2);(17,1);(18,0);(19,1);(20,0);(21,0);(22,5);(23,0);(24,0);(25,3);(26,0);(27,0);(28,0);(29,0);(30,0);(31,0);(32,0);(33,9);(34,0);(35,0);(36,5);(37,0);(38,0);(39,0);(40,7);(41,0);(42,0);(43,6);(44,0);(45,0);(46,0);(47,8);(48,2);(49,0);(50,0);(51,0);(52,5);(53,0);(54,2);(55,3);(56,6);(57,0);(58,0);(59,0);(60,5);(61,0);(62,0);(63,0);(64,0);(65,9);(66,0);(67,2);(68,0);(69,0);(70,0);(71,7);(72,0);(73,0);(74,0);(75,5);(76,0);(77,9);(78,0);(79,4);(80,0)]

let formatClues l = List.filter (fun (_, value) -> value <> 0) l